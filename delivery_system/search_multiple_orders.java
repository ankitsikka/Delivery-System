/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package deliverysystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.MessageFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class search_multiple_orders extends javax.swing.JInternalFrame {

    /**
     * Creates new form search
     */
    public search_multiple_orders() {
        initComponents();
         jScrollPane1.setVisible(false);
         
         
         Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from citytable";
                PreparedStatement ms =myconnection.prepareStatement(q);

                ResultSet myresult=ms.executeQuery();

                if(myresult.next()){
                    jComboBox1.addItem("Choose city");
                    do{
                        jComboBox1.addItem(myresult.getString("cityname"));
                    }
                    while(myresult.next());

                }
                
                
                

            }

            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Search Multiple Orders");
        getContentPane().setLayout(null);

        jLabel2.setText("Order Date");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(174, 27, 90, 30);
        getContentPane().add(jDateChooser1);
        jDateChooser1.setBounds(250, 30, 150, 22);

        jLabel4.setText("City");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(590, 30, 40, 30);

        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(640, 30, 130, 30);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/search-icon (1).png"))); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(780, 30, 110, 33);

        jLabel5.setText("Order Status");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(170, 80, 79, 30);

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Status", "Pending", "Completed", "Cancelled" }));
        getContentPane().add(jComboBox6);
        jComboBox6.setBounds(260, 80, 140, 30);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/search-icon (1).png"))); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(420, 80, 110, 33);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order No.", "Order Date", "Customer Name", "City", "Phone", "Price", "Status"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(40, 210, 910, 370);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/App-xmag-search-icon.png"))); // NOI18N
        jButton3.setText("View All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(30, 30, 120, 40);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/search-icon (1).png"))); // NOI18N
        jButton4.setText("Search");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(410, 30, 100, 33);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/S/Very-Basic-Update-icon.png"))); // NOI18N
        jButton5.setText("Update");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(310, 160, 100, 25);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/S/Actions-window-close-icon.png"))); // NOI18N
        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(450, 160, 90, 25);

        jLabel1.setText("Customer Name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(580, 86, 110, 30);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(700, 90, 150, 22);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/search-icon (1).png"))); // NOI18N
        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(860, 80, 110, 33);

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/deliverysystem/images/print-icon - Copy.png"))); // NOI18N
        jButton8.setText("Print");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(610, 160, 100, 33);

        setBounds(0, 0, 1014, 646);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        
        
        Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from ordertable where cityname=?";
                PreparedStatement ms =myconnection.prepareStatement(q);
                 ms.setString(1, jComboBox1.getSelectedItem().toString());
                ResultSet myresult=ms.executeQuery();
                DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                if(myresult.next())
                {
                     jScrollPane1.setVisible(true);
                    this.revalidate();
                    mymodel.setRowCount(0);
                    do{ 
                       String orderno,orderdate,city,phone,price,status,cname;
                        orderno=myresult.getString("orderno");
                        orderdate=myresult.getString("orderdate");
                        city=myresult.getString("cityname");
                        phone=myresult.getString("phone");
                        price=myresult.getString("price");
                        status=myresult.getString("status");
                        cname=myresult.getString("cname");
                        mymodel.addRow(new Object[]{orderno,orderdate,cname,city,phone,price,status});
                       
                    }while(myresult.next());
                }
                 else{
                     jScrollPane1.setVisible(false);
                     JOptionPane.showMessageDialog(rootPane,"No record found ");
                     
                 }
                
                 
            }
           
            catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                    }
            finally
            {
                myconnection.close();
            }
            
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        
        
         Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from ordertable order by orderno desc";
                PreparedStatement ms =myconnection.prepareStatement(q);
                ResultSet myresult=ms.executeQuery();
                
                DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                if(myresult.next())
                {    jScrollPane1.setVisible(true);
                    this.revalidate();
                    mymodel.setRowCount(0);
                    do{
                        String orderno,orderdate,city,phone,price,status,cname;
                        orderno=myresult.getString("orderno");
                        orderdate=myresult.getString("orderdate");
                        city=myresult.getString("cityname");
                        phone=myresult.getString("phone");
                        price=myresult.getString("price");
                        status=myresult.getString("status");
                        cname=myresult.getString("cname");
                        mymodel.addRow(new Object[]{orderno,orderdate,cname,city,phone,price,status});
                    }while(myresult.next());
                }
                else{
                     jScrollPane1.setVisible(false);
                     JOptionPane.showMessageDialog(rootPane,"No record found ");}
                 
                
                
            }
           
            catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                    }
            finally
            {
                myconnection.close();
            }
            
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        
        Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from ordertable where orderdate=?";
                PreparedStatement ms =myconnection.prepareStatement(q);
                 SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
               
                 ms.setString(1, myformat.format(jDateChooser1.getDate()));
                ResultSet myresult=ms.executeQuery();
                DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                if(myresult.next())
                {
                     jScrollPane1.setVisible(true);
                    this.revalidate();
                    mymodel.setRowCount(0);
                    do{ 
                       String orderno,orderdate,city,phone,price,status,cname;
                        orderno=myresult.getString("orderno");
                        orderdate=myresult.getString("orderdate");
                        city=myresult.getString("cityname");
                        phone=myresult.getString("phone");
                        price=myresult.getString("price");
                        status=myresult.getString("status");
                        cname=myresult.getString("cname");
                        mymodel.addRow(new Object[]{orderno,orderdate,cname,city,phone,price,status});
                       
                    }while(myresult.next());
                }
                 else{
                     jScrollPane1.setVisible(false);
                     JOptionPane.showMessageDialog(rootPane,"No record found ");
                     
                 }
                
                 
            }
           
            catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                    }
            finally
            {
                myconnection.close();
            }
            
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        
        
        Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from ordertable where status=?";
                PreparedStatement ms =myconnection.prepareStatement(q);
                 ms.setString(1, jComboBox6.getSelectedItem().toString());
                ResultSet myresult=ms.executeQuery();
                DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                if(myresult.next())
                {
                     jScrollPane1.setVisible(true);
                    this.revalidate();
                    mymodel.setRowCount(0);
                    do{ 
                       String orderno,orderdate,city,phone,price,status,cname;
                        orderno=myresult.getString("orderno");
                        orderdate=myresult.getString("orderdate");
                        city=myresult.getString("cityname");
                        phone=myresult.getString("phone");
                        price=myresult.getString("price");
                        status=myresult.getString("status");
                        cname=myresult.getString("cname");
                        mymodel.addRow(new Object[]{orderno,orderdate,cname,city,phone,price,status});
                       
                    }while(myresult.next());
                }
                 else{
                     jScrollPane1.setVisible(false);
                     JOptionPane.showMessageDialog(rootPane,"No record found ");
                     
                 }
                
                 
            }
           
            catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                    }
            finally
            {
                myconnection.close();
            }
            
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        
        
        
         int row=jTable1.getSelectedRow();
        int answer=JOptionPane.showConfirmDialog(rootPane, "Do you really want to delete", "Confirm",JOptionPane.YES_NO_OPTION);
        if(answer==JOptionPane.YES_OPTION)
        {
            Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="delete from ordertable where orderno=?";
                PreparedStatement ms =myconnection.prepareStatement(q);

               
                ms.setString(1, jTable1.getValueAt(row, 0).toString());

                if(ms.executeUpdate()>0){
                    JOptionPane.showMessageDialog(rootPane,"Record deleted successfully ");
//                    jScrollPane1.setVisible(false);
//                    this.revalidate();
//                    DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
//                    mymodel.setRowCount(0);
                    DefaultTableModel mymodel1=(DefaultTableModel)jTable1.getModel();
                   mymodel1.removeRow(row);
                    

                }

            }

            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
            }
            finally
            {
                myconnection.close();
            }

        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
        }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        
        
        int row=jTable1.getSelectedRow();
        Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="update ordertable set orderno=?,orderdate=?,cityname=?,phone=?,price=?,status=?"+"where cname=?";
                PreparedStatement ms =myconnection.prepareStatement(q);
                 ms.setString(6, jTable1.getValueAt(row, 6).toString());
                 ms.setString(1, jTable1.getValueAt(row, 0).toString());
                 ms.setString(2, jTable1.getValueAt(row, 1).toString());
                 ms.setString(3, jTable1.getValueAt(row, 3).toString());
                 ms.setString(4, jTable1.getValueAt(row, 4).toString());
                 ms.setString(5, jTable1.getValueAt(row, 5).toString());
                 ms.setString(7, jTable1.getValueAt(row, 2).toString());

                if(ms.executeUpdate()>0)
                {
                                    JOptionPane.showMessageDialog(rootPane,"Record updated successfully ");
                                     jScrollPane1.setVisible(false);
                    this.revalidate();
                    DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                    mymodel.setRowCount(0);
                            
                }
                    

                }

                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }

            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
            }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        
        Connection myconnection;
        String path="jdbc:mysql://localhost/";
        String place="deliverysystemdb";
        String username="root";
        String password="";
        try
        {
            myconnection =DriverManager.getConnection(path+place,username,password);
            try
            {
                String q="select* from ordertable where cname like ?";
                PreparedStatement ms =myconnection.prepareStatement(q);
                 ms.setString(1,jTextField1.getText()+"%");
                ResultSet myresult=ms.executeQuery();
                DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                if(myresult.next())
                {
                     jScrollPane1.setVisible(true);
                    this.revalidate();
                    mymodel.setRowCount(0);
                    do{ 
                       String orderno,orderdate,city,phone,price,status,cname;
                        orderno=myresult.getString("orderno");
                        orderdate=myresult.getString("orderdate");
                        city=myresult.getString("cityname");
                        phone=myresult.getString("phone");
                        price=myresult.getString("price");
                        status=myresult.getString("status");
                        cname=myresult.getString("cname");
                        mymodel.addRow(new Object[]{orderno,orderdate,cname,city,phone,price,status});
                       
                    }while(myresult.next());
                }
                 else{
                     jScrollPane1.setVisible(false);
                     JOptionPane.showMessageDialog(rootPane,"No record found ");
                     
                 }
                
                 
            }
           
            catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                    }
            finally
            {
                myconnection.close();
            }
            
        }
        catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in query "+e.getMessage());
                }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try
        {
            MessageFormat header=new MessageFormat("List of Orders");
            MessageFormat footer=new MessageFormat("Page{0}");
            jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Cannot Print "+e.getMessage());
        }
    }//GEN-LAST:event_jButton8ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox6;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
